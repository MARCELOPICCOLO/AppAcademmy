// <auto-generated />
using System;
using AppAcademmy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppAcademmy.Migrations
{
    [DbContext(typeof(AppAcademmyContext))]
    partial class AppAcademmyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppAcademmy.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("password")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("AppAcademmy.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerClientId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerCourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("timeCourse")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerClientId", "OwnerCourseId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("AppAcademmy.Owner", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "CourseId");

                    b.HasIndex("ClientId")
                    .IsUnique(false);

                    b.ToTable("owners");
                });

            modelBuilder.Entity("AppAcademmy.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("signatures");
                });

            modelBuilder.Entity("CourseSignature", b =>
                {
                    b.Property<int>("SignaturesId")
                        .HasColumnType("int");

                    b.Property<int>("coursesId")
                        .HasColumnType("int");

                    b.HasKey("SignaturesId", "coursesId");

                    b.HasIndex("coursesId");

                    b.ToTable("CourseSignature");
                });

            modelBuilder.Entity("AppAcademmy.Course", b =>
                {
                    b.HasOne("AppAcademmy.Owner", "Owner")
                        .WithMany("courses")
                        .HasForeignKey("OwnerClientId", "OwnerCourseId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("AppAcademmy.Owner", b =>
                {
                    b.HasOne("AppAcademmy.Client", "Client")
                        .WithOne("Owner")
                        .HasForeignKey("AppAcademmy.Owner", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AppAcademmy.Signature", b =>
                {
                    b.HasOne("AppAcademmy.Client", "Client")
                        .WithMany("signatures")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CourseSignature", b =>
                {
                    b.HasOne("AppAcademmy.Signature", null)
                        .WithMany()
                        .HasForeignKey("SignaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAcademmy.Course", null)
                        .WithMany()
                        .HasForeignKey("coursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppAcademmy.Client", b =>
                {
                    b.Navigation("Owner");

                    b.Navigation("signatures");
                });

            modelBuilder.Entity("AppAcademmy.Owner", b =>
                {
                    b.Navigation("courses");
                });
#pragma warning restore 612, 618
        }
    }
}
